local set = vim.keymap.set

local default = { noremap = true, unique = true, silent = true }
local expr = { noremap = true, unique = true, expr = true, silent = true }
local special = { noremap = true, silent = true }
local unique = { noremap = true, unique = true }

vim.g.mapleader = " "
vim.g.maplocalleader = " "

set("c", "<C-a>", "<Home>", unique)
set("c", "<C-e>", "<End>", unique)
set("c", "<C-n>", "<Down>", unique)
set("c", "<C-p>", "<Up>", unique)
set("c", "<M-b>", "<S-Left>", unique)
set("c", "<M-f>", "<S-Right>", unique)
set("c", "Q", "q", unique)

set("i", "<space>", "<space><c-g>u", default)
set("i", "<M-bs>", "<C-W>", default)

set("t", "<M-r>", [['<C-\><C-N>"'.nr2char(getchar()).'pi']], default)

set("n", "-", "<CMD>Oil<cr>", unique)

set("n", "<M-h>", "<cmd>vertical resize -2<cr>", unique)
set("n", "<M-j>", "<cmd>resize -2<cr>", unique)
set("n", "<M-k>", "<cmd>resize +2<cr>", unique)
set("n", "<M-l>", "<cmd>vertical resize +2<cr>", unique)

set("i", "<M-j>", "<Esc><cmd>m .+1<cr>==gi", unique)
set("i", "<M-k>", "<Esc><cmd>m .-2<cr>==gi", unique)
set("v", "<M-j>", ":m '>+1<cr>gv=gv", default)
set("v", "<M-k>", ":m '<-2<cr>gv=gv", default)

set("n", "<C-j>", "<cmd>cnext<cr>", unique)
set("n", "<C-k>", "<cmd>cprev<cr>", unique)
set("n", "<C-h>", "<cmd>lprev<cr>", unique)
set("n", "<C-l>", "<cmd>lnext<cr>", special)

set("v", "<C-j>", "<cmd>cnext<cr>", unique)
set("v", "<C-k>", "<cmd>cprev<cr>", unique)
set("v", "<C-h>", "<cmd>lprev<cr>", unique)
set("v", "<C-l>", "<cmd>lnext<cr>", special)

set("n", "<Esc>", "<cmd>nohlsearch<cr>", unique)
set("n", "j", [[v:count == 0 ? "gj" : "j"]], expr)
set("n", "k", [[v:count == 0 ? "gk" : "k"]], expr)
set("v", "<", "<gv", default)
set("v", "<S-Tab>", "<gv", special)
set("v", "<Tab>", ">gv", special)
set("v", ">", ">gv", default)
set("v", "j", "gj", default)
set("v", "k", "gk", default)
set("v", "p", [["_dP]], default)

set("n", "<leader>0", "<cmd>tabl<cr>", unique)
set("n", "<leader>1", "1gt", default)
set("n", "<leader>2", "2gt", default)
set("n", "<leader>3", "3gt", default)
set("n", "<leader>4", "4gt", default)
set("n", "<leader>5", "5gt", default)
set("n", "<leader>6", "6gt", default)
set("n", "<leader>7", "7gt", default)
set("n", "<leader>8", "8gt", default)
set("n", "<leader>9", "9gt", default)

set("n", "<leader>H", "<C-w>H", default)
set("n", "<leader>J", "<C-w>J", default)
set("n", "<leader>K", "<C-w>K", default)
set("n", "<leader>L", "<C-w>L", default)
set("n", "<leader>h", "<C-w>h", default)
set("n", "<leader>j", "<C-w>j", default)
set("n", "<leader>k", "<C-w>k", default)
set("n", "<leader>l", "<C-w>l", default)

set("", "<leader>X", "<cmd>!open %<cr><cr>", unique)
set("n", "<Leader>n", "<cmd>bn<cr>", unique)
set("n", "<Leader>p", "<cmd>bp<cr>", unique)
set("n", "<leader>/", "<cmd>FzfLua lgrep_curbuf<cr>", unique)
set("n", "<leader>;", "<cmd>NvimTreeToggle<cr>", unique)
set("n", "<leader><leader>", "<C-^>", default)
set("n", "<leader>?", "<cmd>FzfLua oldfiles<cr>", unique)
set("n", "<leader>A", "<cmd>OpenInGHFileLines<cr>", unique)
set("n", "<leader>D", "<cmd>DiffviewOpen<cr>", unique)
set("n", "<leader>F", "<cmd>NvimTreeRefresh<cr>", unique)
set("n", "<leader>G", "<cmd>Gitsigns blame<cr>", unique)
set("n", "<leader>I", "<cmd>buffers<cr>:buffer<Space>", unique)
set("n", "<leader>O", ":h <C-R>=expand('<cword>')<cr><cr>", unique)
set("n", "<leader>Q", "<cmd>qa<cr>", unique)
set("n", "<leader>S", "<cmd>Neogit<cr>", unique)
set("n", "<leader>T", "<cmd>Vterm<cr>", unique)
set("n", "<leader>U", ":bufdo set nu! rnu!<cr>", unique)
set("n", "<leader>V", "<cmd>set paste!<cr>", unique)
set("n", "<leader>W", "<cmd>FormatToggle<cr>", unique)
set("n", "<leader>a", "<cmd>FzfLua live_grep<cr>", unique)
set("n", "<leader>b", "<cmd>GrugFar<cr>", unique)
set("n", "<leader>d", "<cmd>FzfLua resume<cr>", unique)
set("n", "<leader>f", "<cmd>NvimTreeOpen<cr>", unique)
set("n", "<leader>i", "<cmd>FzfLua buffers<cr>", unique)
set("n", "<leader>m", "<cmd>setlocal spell! spelllang=en_us<cr>", unique)
set("n", "<leader>s", "<cmd>FzfLua files<cr>", unique)
set("n", "<leader>t", "<cmd>Term<cr>", unique)
set("n", "<leader>u", "<cmd>UndotreeToggle<cr>", unique)
set("n", "<leader>w", "<cmd>w<cr>", unique)
set("n", "<leader>x", "<cmd>x<cr>", unique)
set("n", "<leader>z", "za", default)
set("v", "<leader>a", "<cmd>FzfLua grep_visual<cr>", unique)
set("v", "<leader>b", "<cmd>GrugFarWithin<cr>", unique)

set("n", "<leader>E", "vip:sort iu<cr>", default)
set("n", "<leader>e", "vip:sort u<cr>", default)
set("v", "<leader>E", ":sort iu<cr>", default)
set("v", "<leader>e", ":sort u<cr>", default)

set("n", "<leader>'", "<cmd>vsp<cr>", unique)
set("n", "<leader>-", "<cmd>sp<cr>", unique)
set("n", "<leader>=", "<cmd>sp<cr>", unique)
set("n", "<leader>\\", "<cmd>vsp<cr>", unique)

set("n", "<leader>C", [[gg"+yG]], default)
set("n", "<leader>v", [["+p]], default)
set("v", "<leader>c", [["+y]], default)
set("v", "<leader>p", "p", default)
set("v", "<leader>v", [["+p]], default)

local b = require("config.buffers")
set("n", "<leader>q", function()
  b.close_buffer()
end, unique)
